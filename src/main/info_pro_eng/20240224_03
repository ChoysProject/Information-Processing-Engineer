


객체지향 설계

종종 출제됨

정리특강으로 또 듣고 듣고듣고 또듣고 ~

EAI
    기업간 어플리케이션 통합
    포인트투포인트
    허브앤스포크
    메시지 버스
    하이브리드

연계 기술들

디비링크
JDBC
소켓
하이퍼링크 ?

접속할때 쓰는것들이다



객체지향

현실세계의 유형 무형을 모든대상을 모든걸 객체로 만든다 라고 생각하면됨!

객체지향 구성요소
클래스
객체
속성
메서드
메시지
    - 인스턴스가 인스턴스한테 이거해 ~ 하는거


객체지향언어의 특징
캡슐화 정보은닉
상속
    - 부모로부터 물려받을것 사용하는거
다형성
    - 형태가 다양하다
    - 2가지 오버로딩 오버라이딩
추상화
    - 실체의 핵심적인 개념만을 추출하여 간결한 형태로 표현


객체지향 설계원칙

SOLID

SRP 단일책임의 원칙
    - 한 클래스는 하나의 책임만

OCP 개방폐쇄의 원칙
    - 확장에는 열려있고 수정에는 닫혀있어야함

LSP 리스코프 치환의 원칙
    - 자식 클래스는 언제나 부모의 클래스를 대체할 수 있어야함

ISP 인터페이스 분리 원칙
    - 자신이 사용하지 말하야 하는 인터페이스 X

DIP 의존성 역전 워칙
    - 자주바뀌는거에 의존하지말고 변하지 않는거에 의존해야한다.

-----------------------------------------

디자인패턴 개념
    - 예시, 이렇게 개발하면 좋다 라는거다.


Gof 디자인패턴

23가지 디자인패턴 정리

생구행 패턴 3가지로 분류

특징을 외울 것

생성패턴
    - 객체가 생성될때 이렇게하면 좋더라

구조 패턴
    - 클래스나 객체를 조합할때

행위 패턴
    - 동작할떄


생성 패턴
추상팩토리 패턴
    - 구체적인 클래스에 의존하지 않는다.

빌더 패턴
    - 복합객체를 분리
팩토리 메서드
    - 객체 생성을서브 클래스로 위임해서 캡슐화함.

프로토타입
    - 원본객체를 복사함으로써 객체를 생성함

싱글톤
    - 인스턴스가 오직 하나를 보장함

----------------------------------

구조패턴

어댑터
    - 변환하여 다른클래스 이용할수있도록함

브리지
    - 구현부에서 추상층을 분리

컴포지트
    - 객체들의 관계를 트리구조로 구성

데코레이터
    - 다를객체를 덧붙이는 방식

퍼사드
    - 서브시스템 앞쪽에서 다른거 이용할수있게
    - 랩퍼 제공
플라이웨이트
    - 메모리를 절약함 크기가작은 여러개 객체

프록시
    - 대리 하는것

------------------------------------

행위패턴

책임연쇄패턴
    - 한객체가 처리 못하는거 다음 객체로 전달

커맨트
    - 실행될 기능을 캡슐화 함으로써 유연성 제공

인터프리터
    - 주어진 언어에 대해 해당언어 해석

반복자
    - 내부 구조 노출없이 원소 접근
    - 반복자

중재자
    - 중재자를 통해 통신하도록한다

메멘토
    - 객체의 상태정보를 저장하고 필요에 따라 이전상태로 복원

옵저버
    - 상태변화가 있을떄마다
    - 메서드를 통해 관찰자에게 공지하도록하는거

상태
    - 상태를 객체로 표현한다

전략
    - 알고리즘 나오면 전략패턴

템플릿메소드
    - 상위클래스는 골격을 제공

방문자
    - 객체구조를 이루는 원소에 대한 연산을 정의하는데 사용하는 패턴



클래스
속성
메서드
객체
메시지

캡슐화 정보은닉
상속
추상화
다형성

SOLID

