

이론공부는 굳이 복습하지말자 ~

1. 소프트웨어 공학
    - 소프트웨어 공학의 정의?
        . 소프트웨어를 잘만들어보자 ~
        . 품질높은 소프트웨어를 효율적으로 개발하기 위한 학문이다!

    - 소프트웨어의 위기의 원인
        . SW에 대한 이해 부족
        . 전문적 교육 부족
        . 작업일정과 비용 추정의 부정확성

    - 소프트웨어의 위기의 결과
        . 개발인력부족 및 인건비 상승
        . 신뢰성 부족 성능 부족

2. 소프트웨어의 공학 3R ★★★

    - 역공학
        . 역으로 문서를 산출하는것
    - 재공학
        . 건물 비유하자면 문만 교체하고, 창문 갈고하는것 (유지보수)
    - 재사용
        . 잘만들어졌던걸 다른곳에서 사용

    을 사용해서 소프트웨어의 생산성을 극대화 하는 기법

    역공학 (리버스 엔지니어링)
        - 이미 개발된 시스템을 분석해서 요구분석서 설계서 등 문서를 추출하는것

        상위 CASE 분석 설계
        하위 CASE 구성 테스트

    재공학
        - 유지보수의 생산성으로 위기를 극복해보자

        예방 유지보수를 통한 소프트웨어 위기 해결
        - 재공학 과정
            . 분석 -> 재구성 -> 역공학 -> 이관

    재사용
        - 잘만들었어, 잘만든거 뽑아서 사용하자
        - 이미 만들어진거 일부를 다시사용한다.
        -재사용 범위
            . 함수 객체 재사용
            . 컴포넌트 재사용
            . 애블리케이션 재사용

        - 자사용 방법 두가지
            . 합성중심 끼워맞추는거
            . 생성중심 추상화하는거

3. 소프트웨어 개발단계
    계 분 설 구 테 유 ★

    DFD 데이터 플로우 다이어그램
    ERD
    분석 설계단계에서

    구현단계에서는
    IDE 인텔리제이

    테스트 단위 -> 통합 -> 시스템 -> 인수 테스트 ~ 순서

    유지보수
    수정보수 향상보수 적응보수 예방보수

    