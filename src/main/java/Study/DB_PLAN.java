package Study;

public class DB_PLAN {

	
	
//	데이터베이스 설계
//		>> 사용자의 요구를 분석
//		>> 저장할수있는 DB구조에 변형한 후 DBMS로 구현하여 일반사용자들이 사용하게 하는 것.
//	
//	DB 설계시 고려사항
//	
//	무결성
//		>> 사입, 삭제, 갱신 등의 연산 후에도 DB에 저장된 데이터가 정해진 제약 조건을 항상 만족해야 함.
//	
//	일관성
//		>> DB에 저장된 데이터들 사이나, ㅈ특정 질의에 대한 응답이 처음부터 끝까지 변함없이 일정해야 함.
//	
//	회복
//		>> 시스템에 장애가 발생했을 때 장애 발생 직전의 상태로 복구할 수 있어야함
//	
//	보안 
//		>> 불법적인 데이터의 노출 또는 변경이나 손실로부터 보호할 수 있어야함.
//	
//	효율성
//		>> 응답시간의 단축, 시스템의 생산성, 저장 공간의 최적화 등이 가능해야함
//	
//	데이터 베이스 확장
//		>> 데이터베이스 운영에 영향을 주지 않으면서 지속적으로 데이터를 추가할 수 있어야함.
	
	
//	데이터베이스 설계 순서
//	
//	요구조건 분석
//		>> 요구 조건 명세서 작성
//	개념적 설계
//		>> 개념 스키마, 트랜잭션 모델링, ER모델
//	논리적 설계
//		>> 목표 DBMS에 맞는 논리 스키마 설계
//	물리적 설계
//		>> 목표 DBMS에 맞는 물리적 구조의 데이터로 변환
//	구현
//		>> 목표 DBMS의 DDL 데이터 정의어로 데이터베이스 생성, 트랜잭션 작성
//	
//	요구조건 분석
//		>> 요구 조건 분석은 데이터베이스를 사용할 사람들로부터 필요한 용도를 파악하는 것.
//		>> 데이터베이스 사용자에 따른 수행 업무와 필요한 데이터의 종류, 용도,처리,형태,흐름,제약 조건 등을 수집한다.
//		>> 수집된 정보를 바탕으로 요구 조건 명세를 작성한다.
	
	
//	개념적 설계
//	>> 현실세계에 대한 인식을 추상적 개념으로 표현한 과정
//	
//	논리적 설계
//	>> 현실세계에서 발생하는 자료를 컴퓨터가 이해하고 처리할 수 있는 물리적 장치에 저장할 수있도록 변환하기 위해 DBMS지원하는 논리적 자료구조로 변환시키는것.
//	
//	물리적 설계
//	>> 논리적 구조로 표현된 데이터를 디스크 등의 물리적 저장장치에 저장할 수 있는 물리적 구조의 데이터로 변환하는 과정이다.
	
	
//	데이터베이스 구현
//	>> 논리적 설계와 물리적 설계에서 도출된 데이터베이스 스키마를 파일로 생성하는 과정
//	
	
	
//	요구분석, 개념적 설계, 논리적 설계, 물리적 설계, 구현
	
	
	
	
	
	
	
	
}
