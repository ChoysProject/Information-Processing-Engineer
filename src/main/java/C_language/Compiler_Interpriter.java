package C_language;

public class Compiler_Interpriter {

	


//2강 컴파일러, 인터프리터
//
//    컴퓨터는 빠르게 연산을 위한 도구일뿐
//    
//    컴파일이란 ?
//    인간이 만든 고급언어를 컴퓨터가 해석 할 수 있는 저급언어로 번역.
//
//    전처리기란 ?
//    main - int가 될수있고 void가 도리수있고 함수가 끝난다.
//    
//    # include<studio.h>
//    합쳐주는것 정리하자면 main 메서드라고 생각하면된다.
//
//C언어 컴파일 과장
//    전처리기
//        - 전처리 구문을 처리하는 과장
//        ex) #include<stdio.h>
//    컴파일러
//        - 고수준언어를 저수준 언어로 변환
//        기계어와 가장 가까운 현태의 언어
//    어셈블러
//        - 완전히 기계어로 바꾸어 주는 역할
//    링커
//        - 여러 개의 오브젝트 파일을 합치거나, 라이브러리를 합치는 역할
//
//    순서
//    전처리기 - 컴파일러 - 어셈블러 - 링커
//    
//
//    컴파일러(번역)
//        - 고급언어로 작성된 프로그램을 컴퓨터에서 실행하기 위해
//        컴퓨터가 이해할 수 있는 언어로 번역
//        - 전체를 번역하므로, 번역시간이 오래걸리만,
//        한번 번역한 후에는 다시 번역하지 않으므로 실핼 속도는 느림
//
//        종류 : C, JAVA 등
//    
//    인터프리터 (통역)
//        - 고급언어로 작성된 프로그램을 한 줄씩 읽어들여서 실행하는 프로그램
//        
//        - 번역과 실행이 동시에 이루어지므로, 별도의 실행파일이 존재하지않습니다.
//
//    종류 : Ruby, php, javascript
//

	
}
